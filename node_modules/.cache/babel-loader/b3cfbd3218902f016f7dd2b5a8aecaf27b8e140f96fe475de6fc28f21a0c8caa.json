{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\React\\\\section-21-advanced-routing\\\\frontend\\\\src\\\\pages\\\\Events.js\",\n  _s = $RefreshSig$();\nimport { defer, json, useLoaderData, Await } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(\"a\", {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    // return {\n    //   isError: true,\n    //   message: 'Could not fetch events'\n    // }\n    // throw new Response(JSON.stringify({\n    //   message: 'Could not fetch events',\n    // }), {\n    //   status: 500\n    // });\n    throw json({\n      message: 'Could not fetch events'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nexport function loader() {\n  return defer({\n    events: loadEvents()\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["defer","json","useLoaderData","Await","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","data","children","events","fileName","_jsxFileName","lineNumber","columnNumber","_c","loadEvents","response","fetch","ok","message","status","loader","$RefreshReg$"],"sources":["C:/Users/Usuario/Desktop/React/section-21-advanced-routing/frontend/src/pages/Events.js"],"sourcesContent":["\nimport { defer, json, useLoaderData, Await } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\n\nfunction EventsPage() {\n  const data = useLoaderData();\n\n  return (\n    <a>\n\n      <EventsList events={events} />\n    </a>\n  );\n}\n\nexport default EventsPage;\n\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n\n  if (!response.ok) {\n    // return {\n    //   isError: true,\n    //   message: 'Could not fetch events'\n    // }\n    // throw new Response(JSON.stringify({\n    //   message: 'Could not fetch events',\n    // }), {\n    //   status: 500\n    // });\n    throw json({ message: 'Could not fetch events' }, { status: 500 });\n  } else {\n    return response;\n  }\n}\n\nexport function loader() {\n  return defer({\n    events: loadEvents()\n  })\n}\n\n"],"mappings":";;AACA,SAASA,KAAK,EAAEC,IAAI,EAAEC,aAAa,EAAEC,KAAK,QAAQ,kBAAkB;AACpE,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,IAAI,GAAGP,aAAa,CAAC,CAAC;EAE5B,oBACEI,OAAA;IAAAI,QAAA,eAEEJ,OAAA,CAACF,UAAU;MAACO,MAAM,EAAEA;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAER;AAACP,EAAA,CATQD,UAAU;EAAA,QACJL,aAAa;AAAA;AAAAc,EAAA,GADnBT,UAAU;AAWnB,eAAeA,UAAU;AAEzB,eAAeU,UAAUA,CAAA,EAAG;EAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAMnB,IAAI,CAAC;MAAEoB,OAAO,EAAE;IAAyB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACpE,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF;AAEA,OAAO,SAASK,MAAMA,CAAA,EAAG;EACvB,OAAOvB,KAAK,CAAC;IACXW,MAAM,EAAEM,UAAU,CAAC;EACrB,CAAC,CAAC;AACJ;AAAC,IAAAD,EAAA;AAAAQ,YAAA,CAAAR,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}